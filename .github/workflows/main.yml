name: CI Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: gradle:7.3.3-jdk17-alpine
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: infra/01-test.sh

  build_and_upload_image:
    runs-on: ubuntu-latest
    needs: test
    services:
      docker:
        image: docker:24.0.5-dind
        options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Docker login setup
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: infra/00-docker-setup.sh
      - name: Build Docker image
        run: infra/02-build_image.sh
        env:
          IMAGE_TAG: ${{ secrets.DOCKER_HUB_USERNAME }}/g15n-2
          GITHUB_SHA: ${{ github.sha }}
      - name: Push Docker image
        run: infra/03-upload_image.sh
        env:
          IMAGE_TAG: ${{ secrets.DOCKER_HUB_USERNAME }}/g15n-2
          GITHUB_SHA: ${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_upload_image
    steps:
      - name: multiple command
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_DNS_OR_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
              echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
              docker pull "${{ secrets.DOCKER_HUB_USERNAME }}/g15n-2${{ github.sha }}"
              docker stop ${{ secrets.CONTAINER_NAME }} || true  # Stop any running instance
              docker rm ${{ secrets.CONTAINER_NAME }}  || true    # Remove stopped instance
              docker run -d --name ${{ secrets.CONTAINER_NAME }} -p 80:8080 "${{ secrets.DOCKER_HUB_USERNAME }}/g15n-2{{ github.sha }}"

  # deploy_2:
  #   runs-on: ubuntu-latest
  #   needs: build_and_upload_image
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Set up SSH
  #       run: infra/00-ssh-setup.sh
  #       env:
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         SERVER_DNS_OR_IP: ${{ secrets.SERVER_DNS_OR_IP }}
  #     - name: Deploy application
  #       run: infra/04-deploy.sh
  #       env:
  #         DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  #         SERVER_DNS_OR_IP: ${{ secrets.SERVER_DNS_OR_IP }}
  #         SERVER_USER: ${{ secrets.SERVER_USER }}
  #         IMAGE_TAG: ${{ secrets.DOCKER_HUB_USERNAME }}/g15n-2
  #         GITHUB_SHA: ${{ github.sha }}